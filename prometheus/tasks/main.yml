# This playbook prepares and installs the Prometheus time series
# database and the push endpoint.

---
- name: Check validity of grafana admin password
  fail: msg="The grafana admin password has to be defined"
  when: secret.grafana.password == ''

- name: Prometheus scraping network
  command: docker network create prometheus_net
  ignore_errors: yes

- name: Prometheus data volume
  command: docker volume create --name=prometheus-db-data

# template the application.properties and docker-compose.yml to the dest host
- name: Prepare a configuration directory for shelves backend
  file:
    path: "{{ docker.config_dir }}/{{ service }}"
    state: directory
    mode: 0700

- name: Copy over the prometheus configuration
  copy:
    src: prometheus.yml
    dest: "{{ docker.config_dir }}/{{ service }}/prometheus.yml"

- name: Prometheus push gateway
  docker:
    name: prometheus-push
    image: prom/pushgateway
    pull: always
    ports: 9091
    restart_policy: always
    restart_policy_retry: 10
    state: reloaded
    env:
      VIRTUAL_HOST: "push.{{ prometheus.hostname }}"
      LETSENCRYPT_HOST: "push.{{ prometheus.hostname }}"
      LETSENCRYPT_EMAIL: "{{ prometheus.email }}"

- name: Connect push gw to scraping network
  command: docker network connect prometheus_net prometheus-push

- name: Prometheus time series db
  docker:
    name: prometheus-db
    image: prom/prometheus
    ports: 9090
    volumes:
      - prometheus-db-data:/prometheus
      - "{{ docker.config_dir }}/{{ service }}:/etc/prometheus"
    pull: always
    restart_policy: always
    restart_policy_retry: 10
    state: reloaded
    env:
      PUSH_GW: 9091
      VIRTUAL_HOST: "{{ prometheus.hostname }}"
      LETSENCRYPT_HOST: "{{ prometheus.hostname }}"
      LETSENCRYPT_EMAIL: "{{ prometheus.email }}"

- name: Connect Prometheus to scraping network
  command: docker network connect prometheus_net prometheus-db

- name: Grafana dabase volume
  command: docker volume create --name=grafana-db

- name: Grafana config volume
  command: docker volume create --name=grafana-etc

- name: Graphing service
  docker:
    name: grafana
    image: grafana/grafana
    ports: 3000
    volumes:
      - grafana-db:/var/lib/grafana
      - /etc/grafana
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ secret.grafana.password }}"
      VIRTUAL_HOST: "{{ grafana.hostname }}"
      LETSENCRYPT_HOST: "{{ grafana.hostname }}"
      LETSENCRYPT_EMAIL: "{{ grafana.email }}"
    pull: always
    restart_policy: always
    restart_policy_retry: 10
    state: reloaded

- name: Connect Grafana to scraping network
  command: docker network connect prometheus_net grafana

...

